buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'trashacker'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile "org.springframework.cloud:spring-cloud-spring-service-connector:1.1.1.RELEASE"
    compile "org.springframework.cloud:spring-cloud-cloudfoundry-connector:1.1.1.RELEASE"
    compile 'com.google.guava:guava:18.0'
    compile 'io.reactivex:rxjava:1.0.10'
    runtime 'mysql:mysql-connector-java:5.1.35'
//    runtime("com.h2database:h2")
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

sourceSets {
    main {
        resources {
            exclude 'schema.sql'
        }
    }
}

jar {
    version = ''
}

